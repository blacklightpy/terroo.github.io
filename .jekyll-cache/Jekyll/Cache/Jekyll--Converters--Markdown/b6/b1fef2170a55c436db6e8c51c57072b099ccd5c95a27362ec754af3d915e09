I"¶<p><img src="/assets/img/linux/think-linux.jpg" alt="Useful commands for your Linux Part 1" /></p>

<p>Hello guys! We are going to create some quick and simple knowledge articles (so as not to get bored) of things that we often already know, but at some point in an interview or selection exam, we forget, and these simple articles usually exercise our mind to fix and avoid forgetfulness. And always with more intelligent commands that will make us memorize better and better. So letâ€™s go to 5 Useful Commands for your Linux !!!</p>

<!-- QUADRADO -->
<script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-2838251107855362" data-ad-slot="5351066970"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h1 id="01-find-out-if-your-user-is-in-a-group">01. Find out if your user is in a group</h1>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c"># 1Â° way</span>
<span class="nb">groups</span> <span class="nv">$USER</span>

<span class="c"># 2Âº way</span>
<span class="nb">grep</span> <span class="nv">$USER</span> /etc/group | <span class="nb">cut</span> <span class="nt">-d</span>: <span class="nt">-f1</span> | <span class="nb">tr</span> <span class="s1">'\n'</span> <span class="s1">' '</span><span class="p">;</span><span class="nb">echo</span>


<span class="c"># 3Â° way</span>
<span class="nb">id</span> <span class="nv">$USER</span> | <span class="nb">sed</span> <span class="s2">"s/)[^(]*(/ /g;s/.*(</span><span class="se">\|</span><span class="s2">//;s/.</span><span class="nv">$/</span><span class="s2">/;s/</span><span class="nv">$USER</span><span class="s2"> </span><span class="nv">$USER</span><span class="s2"> //"</span></code></pre></figure>

<h1 id="02-insert-user-in-a-group">02. Insert user in a group</h1>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c"># 1Âº way</span>
<span class="nb">sudo </span>usermod <span class="nt">-G</span> grupo <span class="nt">-a</span> <span class="o">[</span>user]

<span class="c"># 2Â° way</span>
gpasswd <span class="nt">-a</span> <span class="o">[</span>user] <span class="o">[</span>group]</code></pre></figure>

<h1 id="03-check-if-your-user-can-use-sudo">03. Check if your user can use sudo</h1>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c"># Enter the Root password</span>
<span class="o">[[</span> <span class="si">$(</span>su <span class="nt">-c</span> <span class="s2">"grep </span><span class="nv">$USER</span><span class="s2"> /etc/sudoers"</span><span class="si">)</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="nb">echo </span>Yes <span class="o">||</span> <span class="nb">echo </span>No</code></pre></figure>

<h1 id="04-getting-information-about-a-file">04. Getting information about a file</h1>
<p>This command displays creation data, modification date. change and other information.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">stat </span>filename</code></pre></figure>

<h1 id="05-working-with-permissions">05. Working with permissions</h1>
<ul>
  <li>If we were to give zero permission to everyone, we could use chmod or chown: <code class="highlighter-rouge">chmod 0 file.txt</code></li>
  <li>If we want to return the initial permissions, we would use the same as it was: <code class="highlighter-rouge">chmod 644 file.txt</code></li>
  <li>And to change the owner: <code class="highlighter-rouge">sudo chown root file.txt</code> that way we change the owner and not the group, if we wanted to change the group we would also use: <code class="highlighter-rouge">sudo chown root:root file.txt</code></li>
</ul>

<!-- LISTA MIN -->
<script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

<p><ins class="adsbygoogle" style="display:inline-block;width:730px;height:95px" data-ad-client="ca-pub-2838251107855362" data-ad-slot="5351066970"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<p>Viewing again with <code class="highlighter-rouge">stat</code> we notice that the owner and/or the group have been changed, but we realize that the group is only allowed to read (r, read), if we wanted to get that permission, we can also use either <code class="highlighter-rouge">chmod</code> or <code class="highlighter-rouge">chown</code></p>

<ul>
  <li>with chmod: <code class="highlighter-rouge">sudo chmod g-r</code>, for group (<strong>g</strong>) get (<strong>-</strong>) read permission (<strong>r</strong>, read), if we check the file again we will see that instead of <code class="highlighter-rouge">0644</code> e<code class="highlighter-rouge"> -rw-râ€“râ€“</code> and now that is: <code class="highlighter-rouge">0604/-rwâ€”-râ€“</code> , others can still read (<code class="highlighter-rouge">râ€“</code>), but if he is only part of the marcos group, his permission corresponding to the 3rd octet is ZERO <strong>0</strong> or <strong>-</strong>.</li>
</ul>

<p>We soon realized that <code class="highlighter-rouge">0</code> is <code class="highlighter-rouge">-</code> .</p>

<p>Tip with image for each number the corresponding output for the octet:</p>

<p><img src="/assets/img/linux/permissions.jpg" alt="Permissions" /></p>

<h2 id="search-links">Search Links:</h2>
<ul>
  <li><a href="https://en.wikipedia.org/wiki/Chmod">https://en.wikipedia.org/wiki/Chmod</a>, very interesting for technical and detailed analysis.</li>
  <li><a href="https://en.wikipedia.org/wiki/User_identifier">https://en.wikipedia.org/wiki/User_identifier</a>, top complement!</li>
</ul>
:ET